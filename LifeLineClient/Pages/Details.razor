@page "/details"
@page "/details/{Group_Id}"
@using LifeLineClient.Models
@using LifeLineClient.Components
@using System.Net.Http
@using System.Text.Json
@inject HttpClient Http
@inject ILiffClient Liff
@inject IJSRuntime JSRuntime

@if (detailsResult != null)
{
<div class="details-tabbar">
    <h2 class="details-tabbar-title">@detailsResult.group_Name</h2>
</div>

<section class="group-total-status">
    <div class="group-total-status-item group-count"><p>グループ人数</p><p class="total-num">@detailsResult.group_Count</p></div>
    <div class="group-total-status-item group-safely"><p>無事</p><p class="total-num">@detailsResult.group_Safely</p></div>
    <div class="group-total-status-item group-injured"><p>重傷・軽傷</p><p class="total-num">@detailsResult.group_Injured</p></div>
</section>
<section>
    @if (detailsResult.liffMemberSafeties.Count > 0)
    {
        <ul class="list-group">
            @foreach (Member member in detailsResult.liffMemberSafeties)
            {
                <GroupMembers Member="@member" />
            }
        </ul>
    }
</section>
}

@code
{
    private string _Group_id = "0";

    [Parameter]
    public string Group_Id
    {
        get
        {
            return this._Group_id;
        }
        set
        {
            this._Group_id = System.Net.WebUtility.UrlDecode(value);
        }
    }

    public DetailsResult detailsResult { get; set; } = null;

    //API
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("API接続開始");
            //Azure APIへつなげる準備
            string url = $"https://lifelinebotapi.azurewebsites.net/api/GroupDetails/GetGroupDetails?group_Id={Group_Id}";
            var request = new HttpRequestMessage(HttpMethod.Get, url);
            request.Headers.Add("Access-Control-Allow-Origin", "*");
            //リクエスト投げる
            HttpResponseMessage response = await Http.SendAsync(request);
            //取得値の処理
            string resJson = await response.Content.ReadAsStringAsync();
            detailsResult = JsonSerializer.Deserialize<DetailsResult>(resJson);
            //結果反映
            StateHasChanged();
            Console.Write(resJson);
            Console.WriteLine("API接続完了");

        }
        catch (Exception e)
        {
            await JSRuntime.InvokeAsync<object>("alert", e.ToString());
        }
    }
}